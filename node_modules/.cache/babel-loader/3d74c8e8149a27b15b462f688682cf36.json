{"ast":null,"code":"import _classCallCheck from \"/home/yalcin/react-udemy/reactjs-unspash-with-axios/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yalcin/react-udemy/reactjs-unspash-with-axios/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yalcin/react-udemy/reactjs-unspash-with-axios/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yalcin/react-udemy/reactjs-unspash-with-axios/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yalcin/react-udemy/reactjs-unspash-with-axios/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yalcin/react-udemy/reactjs-unspash-with-axios/src/components/ImageCard.js\";\nimport React from 'react';\n\nvar ImageCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageCard, _React$Component);\n\n  function ImageCard(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCard).call(this, props));\n\n    _this.setSpans = function () {\n      var height = _this.imageRef.current.clientHeight;\n      var spans = Math.ceil(height / 150 + 1);\n\n      _this.setState({\n        spans: spans\n      });\n    };\n\n    _this.state = {\n      spans: 0\n    };\n    _this.imageRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ImageCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$image = this.props.image,\n          description = _this$props$image.description,\n          urls = _this$props$image.urls;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        ref: this.imageRef,\n        alt: description,\n        src: urls.regular,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ImageCard;\n}(React.Component);\n\nexport default ImageCard;","map":{"version":3,"sources":["/home/yalcin/react-udemy/reactjs-unspash-with-axios/src/components/ImageCard.js"],"names":["React","ImageCard","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","createRef","addEventListener","image","description","urls","regular","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;AACF,qBAAaC,KAAb,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,UAYnBC,QAZmB,GAYR,YAAM;AACb,UAAMC,MAAM,GAAG,MAAKC,QAAL,CAAcC,OAAd,CAAsBC,YAArC;AAEA,UAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAE,GAAR,GAAY,CAAtB,CAAd;;AAEA,YAAKO,QAAL,CAAc;AAACH,QAAAA,KAAK,EAALA;AAAD,OAAd;AACH,KAlBkB;;AAGf,UAAKI,KAAL,GAAa;AAACJ,MAAAA,KAAK,EAAG;AAAT,KAAb;AACA,UAAKH,QAAL,GAAgBL,KAAK,CAACa,SAAN,EAAhB;AAJe;AAKlB;;;;wCAGkB;AACf,WAAKR,QAAL,CAAcC,OAAd,CAAsBQ,gBAAtB,CAAuC,MAAvC,EAA+C,KAAKX,QAApD;AACH;;;6BAUO;AAAA,8BACuB,KAAKD,KAAL,CAAWa,KADlC;AAAA,UACGC,WADH,qBACGA,WADH;AAAA,UACeC,IADf,qBACeA,IADf;AAGJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKZ,QAAf;AAAyB,QAAA,GAAG,EAAEW,WAA9B;AAA2C,QAAA,GAAG,EAAEC,IAAI,CAACC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH;;;;EA9BoBlB,KAAK,CAACmB,S;;AAkC/B,eAAelB,SAAf","sourcesContent":["import React from 'react';\n\nclass ImageCard  extends React.Component {\n    constructor (props){\n        super(props);\n\n        this.state = {spans : 0 };\n        this.imageRef = React.createRef();\n    }\n\n\n    componentDidMount(){\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n\n        const spans = Math.ceil(height /150+1);\n\n        this.setState({spans});\n    };\n\n    render(){\n        const {description,urls} = this.props.image;\n\n        return(\n            <div>\n                <img ref={this.imageRef} alt={description} src={urls.regular}\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default ImageCard;"]},"metadata":{},"sourceType":"module"}